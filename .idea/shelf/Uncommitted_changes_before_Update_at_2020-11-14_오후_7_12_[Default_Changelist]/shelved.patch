Index: app/src/main/java/com/journaldev/androidarcoredistancecamera/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.journaldev.androidarcoredistancecamera;\r\n\r\nimport android.Manifest;\r\nimport android.annotation.SuppressLint;\r\nimport android.app.Activity;\r\nimport android.app.ActivityManager;\r\nimport android.content.Context;\r\nimport android.graphics.ImageFormat;\r\nimport android.graphics.Rect;\r\nimport android.graphics.YuvImage;\r\nimport android.media.Image;\r\nimport android.os.Bundle;\r\nimport android.os.Environment;\r\nimport android.util.Log;\r\nimport android.widget.Button;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.core.app.ActivityCompat;\r\n\r\nimport com.google.ar.core.Anchor;\r\nimport com.google.ar.core.HitResult;\r\nimport com.google.ar.core.Pose;\r\nimport com.google.ar.core.exceptions.NotYetAvailableException;\r\nimport com.google.ar.sceneform.AnchorNode;\r\nimport com.google.ar.sceneform.ArSceneView;\r\nimport com.google.ar.sceneform.FrameTime;\r\nimport com.google.ar.sceneform.Scene;\r\nimport com.google.ar.sceneform.math.Vector3;\r\nimport com.google.ar.sceneform.rendering.Color;\r\nimport com.google.ar.sceneform.rendering.MaterialFactory;\r\nimport com.google.ar.sceneform.rendering.ModelRenderable;\r\nimport com.google.ar.sceneform.rendering.ShapeFactory;\r\nimport com.google.ar.sceneform.ux.ArFragment;\r\nimport com.google.ar.sceneform.ux.TransformableNode;\r\n\r\nimport java.io.BufferedOutputStream;\r\nimport java.io.ByteArrayOutputStream;\r\nimport java.io.File;\r\nimport java.io.FileOutputStream;\r\nimport java.io.IOException;\r\nimport java.nio.ByteBuffer;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.Date;\r\nimport java.util.Objects;\r\n\r\npublic class MainActivity extends AppCompatActivity implements Scene.OnUpdateListener {\r\n\r\n\r\n    private static final double MIN_OPENGL_VERSION = 3.0;\r\n    private static final String TAG = MainActivity.class.getSimpleName();\r\n\r\n    /*Views*/\r\n    private ArSceneView arSceneView;\r\n    private TextView tvDistance;\r\n    private Button btnRecord;\r\n\r\n    /*PrivateMembers*/\r\n    private ArFragment arFragment;\r\n    ModelRenderable cubeRenderable;\r\n    private AnchorNode firstAnchorNode;\r\n    private AnchorNode secondAnchorNode;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n\r\n        if (!checkIsSupportedDeviceOrFinish(this)) {\r\n            Toast.makeText(getApplicationContext(), \"Device not supported\", Toast.LENGTH_LONG).show();\r\n        }\r\n\r\n        setContentView(R.layout.activity_main);\r\n        /*Permissions*/\r\n        ActivityCompat.requestPermissions(this,\r\n                new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE},1);\r\n        /*Init*/\r\n        Initialize();\r\n        getView();\r\n        setListeners();\r\n    }\r\n\r\n    private boolean checkIsSupportedDeviceOrFinish(final Activity activity) {\r\n        String openGlVersionString =\r\n                ((ActivityManager) Objects.requireNonNull(activity.getSystemService(Context.ACTIVITY_SERVICE)))\r\n                        .getDeviceConfigurationInfo()\r\n                        .getGlEsVersion();\r\n        if (Double.parseDouble(openGlVersionString) < MIN_OPENGL_VERSION) {\r\n            Log.e(TAG, \"Sceneform requires OpenGL ES 3.0 later\");\r\n            toastMsg(\"Sceneform requires OpenGL ES 3.0 or later\");\r\n            activity.finish();\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    private void Initialize() {\r\n        MaterialFactory.makeTransparentWithColor(this, new Color(android.graphics.Color.RED))\r\n                .thenAccept(\r\n                        material -> {\r\n                            float rad = (float) 0.005;\r\n                            cubeRenderable = ShapeFactory.makeSphere(rad, Vector3.zero(), material);\r\n                            cubeRenderable.setShadowCaster(false);\r\n                            cubeRenderable.setShadowReceiver(false);\r\n                        });\r\n        arFragment = (ArFragment) getSupportFragmentManager().findFragmentById(R.id.ux_fragment);\r\n    }\r\n\r\n    private void getView() {\r\n        arSceneView = arFragment.getArSceneView();\r\n        tvDistance = findViewById(R.id.tvDistance);\r\n        btnRecord = findViewById(R.id.btnRecord);\r\n    }\r\n\r\n    private void setListeners() {\r\n        arSceneView.getScene().addOnUpdateListener(this);\r\n\r\n        arFragment.setOnTapArPlaneListener((hitResult, plane, motionEvent) -> {\r\n            if (cubeRenderable == null)\r\n                return;\r\n\r\n            if (firstAnchorNode == null) {\r\n                firstAnchorNode = CreateAnchorNode(hitResult);\r\n            }\r\n            else if (secondAnchorNode == null) {\r\n                secondAnchorNode = CreateAnchorNode(hitResult);\r\n            }\r\n            else {\r\n                clearAnchor();\r\n            }\r\n        });\r\n\r\n        btnRecord.setOnClickListener(v->{\r\n            try {\r\n                StoreImage(generateFilename());\r\n                toastMsg(\"saved image successfully\");\r\n            } catch (IOException | NotYetAvailableException e) {\r\n                e.printStackTrace();\r\n                toastMsg(\"saved image failed\");\r\n            }\r\n        });\r\n    }\r\n    private AnchorNode CreateAnchorNode(HitResult hitResult) {\r\n        Anchor anchor = hitResult.createAnchor();\r\n        AnchorNode anchorNode = new AnchorNode(anchor);\r\n        anchorNode.setParent(arSceneView.getScene());\r\n\r\n        TransformableNode node = new TransformableNode(arFragment.getTransformationSystem());\r\n        node.setRenderable(cubeRenderable);\r\n        node.setParent(anchorNode);\r\n        arSceneView.getScene().addChild(anchorNode);\r\n        node.select();\r\n        return anchorNode;\r\n    }\r\n\r\n    private void clearAnchor() {\r\n        arFragment.getArSceneView().getScene().removeChild(firstAnchorNode);\r\n        firstAnchorNode.getAnchor().detach();\r\n        firstAnchorNode.setParent(null);\r\n        firstAnchorNode = null;\r\n\r\n        arFragment.getArSceneView().getScene().removeChild(secondAnchorNode);\r\n        secondAnchorNode.getAnchor().detach();\r\n        secondAnchorNode.setParent(null);\r\n        secondAnchorNode = null;\r\n    }\r\n\r\n    @SuppressLint(\"SetTextI18n\")\r\n    @Override\r\n    public void onUpdate(FrameTime frameTime) {\r\n        if (IsDistanceMeasured()) {\r\n            Pose firstPose = firstAnchorNode.getAnchor().getPose();\r\n            Pose secondPose = secondAnchorNode.getAnchor().getPose();\r\n\r\n            float dx = firstPose.tx() - secondPose.tx();\r\n            float dy = firstPose.ty() - secondPose.ty();\r\n            float dz = firstPose.tz() - secondPose.tz();\r\n\r\n            ///Compute the straight-line distance.\r\n            float distanceCm = (float) Math.sqrt(dx * dx + dy * dy + dz * dz) * 100;\r\n            float convertCm = (float) (Math.round(distanceCm * 100) / 100.0);\r\n            tvDistance.setText(\"Length Between Two Points : \" + convertCm + \" cm\");\r\n        }\r\n    }\r\n\r\n    private boolean IsDistanceMeasured() {\r\n        return firstAnchorNode != null && secondAnchorNode != null;\r\n    }\r\n    private void StoreImage(String path) throws IOException, NotYetAvailableException {\r\n        byte[] data;\r\n        Image image = arSceneView.getArFrame().acquireCameraImage();\r\n        data = NV21toJPEG(YUV_420_888toNV21(image),\r\n                image.getWidth(), image.getHeight());\r\n        BufferedOutputStream bos = new BufferedOutputStream(new FileOutputStream(path));\r\n        bos.write(data);\r\n        bos.flush();\r\n        bos.close();\r\n    }\r\n\r\n    private static byte[] NV21toJPEG(byte[] nv21, int width, int height) {\r\n        ByteArrayOutputStream out = new ByteArrayOutputStream();\r\n        YuvImage yuv = new YuvImage(nv21, ImageFormat.NV21, width, height, null);\r\n        yuv.compressToJpeg(new Rect(0, 0, width, height), 100, out);\r\n        return out.toByteArray();\r\n    }\r\n\r\n    private static byte[] YUV_420_888toNV21(Image image) {\r\n        byte[] nv21;\r\n        ByteBuffer yBuffer = image.getPlanes()[0].getBuffer();\r\n        ByteBuffer uBuffer = image.getPlanes()[1].getBuffer();\r\n        ByteBuffer vBuffer = image.getPlanes()[2].getBuffer();\r\n\r\n        int ySize = yBuffer.remaining();\r\n        int uSize = uBuffer.remaining();\r\n        int vSize = vBuffer.remaining();\r\n\r\n        nv21 = new byte[ySize + uSize + vSize];\r\n\r\n        //U and V are swapped\r\n        yBuffer.get(nv21, 0, ySize);\r\n        vBuffer.get(nv21, ySize, vSize);\r\n        uBuffer.get(nv21, ySize + vSize, uSize);\r\n\r\n        return nv21;\r\n    }\r\n\r\n    private String generateFilename() {\r\n        String date =\r\n                new SimpleDateFormat(\"yyyyMMddHHmmss\", java.util.Locale.getDefault()).format(new Date());\r\n\r\n        File directory = new File(Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_PICTURES) + File.separator + \"Sceneform/\");\r\n        if (!directory.exists()) {\r\n            boolean retVal = directory.mkdirs();\r\n            Log.d(\"generateFileName\", \"directory... \" + (retVal));\r\n        }\r\n\r\n        return Environment.getExternalStoragePublicDirectory(\r\n                Environment.DIRECTORY_PICTURES) + File.separator + \"Sceneform/\" + date + \"_screenshot.jpg\";\r\n    }\r\n\r\n    private void toastMsg(String msg) {\r\n        Toast toast = Toast.makeText(this, msg, Toast.LENGTH_LONG);\r\n        toast.show();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/journaldev/androidarcoredistancecamera/MainActivity.java	(revision 1e82f9ca32c581a3f613c6d10c3a2aeda9875e36)
+++ app/src/main/java/com/journaldev/androidarcoredistancecamera/MainActivity.java	(date 1605022748246)
@@ -5,6 +5,7 @@
 import android.app.Activity;
 import android.app.ActivityManager;
 import android.content.Context;
+import android.content.Intent;
 import android.graphics.ImageFormat;
 import android.graphics.Rect;
 import android.graphics.YuvImage;
@@ -55,6 +56,7 @@
     private ArSceneView arSceneView;
     private TextView tvDistance;
     private Button btnRecord;
+    private Button btnTest;
 
     /*PrivateMembers*/
     private ArFragment arFragment;
@@ -110,6 +112,7 @@
         arSceneView = arFragment.getArSceneView();
         tvDistance = findViewById(R.id.tvDistance);
         btnRecord = findViewById(R.id.btnRecord);
+        btnTest = findViewById(R.id.btnTest);
     }
 
     private void setListeners() {
@@ -139,6 +142,11 @@
                 toastMsg("saved image failed");
             }
         });
+
+        btnTest.setOnClickListener(v->{
+            Intent intent = new Intent(this, TestActivity.class);
+            startActivity(intent);
+        });
     }
     private AnchorNode CreateAnchorNode(HitResult hitResult) {
         Anchor anchor = hitResult.createAnchor();
Index: app/src/main/res/layout/activity_test.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_test.xml	(date 1605022748260)
+++ app/src/main/res/layout/activity_test.xml	(date 1605022748260)
@@ -0,0 +1,17 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <Button
+        android:id="@+id/btnGoBack"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="GO_BACK"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_bias="0.5"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent" />
+</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/java/com/journaldev/androidarcoredistancecamera/TestActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/journaldev/androidarcoredistancecamera/TestActivity.java	(date 1605022748231)
+++ app/src/main/java/com/journaldev/androidarcoredistancecamera/TestActivity.java	(date 1605022748231)
@@ -0,0 +1,20 @@
+package com.journaldev.androidarcoredistancecamera;
+
+import android.app.Activity;
+import android.content.Intent;
+import android.os.Bundle;
+import android.widget.Button;
+
+public class TestActivity extends Activity {
+    @Override
+    protected void onCreate(Bundle saveInstanceState) {
+        super.onCreate(saveInstanceState);
+        setContentView(R.layout.activity_test);
+        Button btnGoBack = findViewById(R.id.btnGoBack);
+        btnGoBack.setOnClickListener(v->{
+            Intent intent = new Intent(this, MainActivity.class);
+            startActivity(intent);
+            finish();
+        });
+    }
+}
